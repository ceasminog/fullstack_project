{"ast":null,"code":"var _jsxFileName = \"/home/piscenco/fullStack/mipt-fs-2019/src/views/todo/index.jsx\";\nimport React from 'react';\nimport css from './styles.module.scss';\nimport { TodoItem } from \"../../components/todoItem\";\nimport { TodoListAdder } from \"../../components/todoItemAdder\";\nimport { connect } from \"react-redux\";\nimport { addTodoItem, removeTodoItem } from \"../../actions\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst getData = async () => {\n  await sleep(3000);\n  return {\n    data: {\n      todoList: [{\n        id: 'wfoiwjefoiwejfoiej',\n        text: 'First item'\n      }]\n    }\n  };\n};\n\nexport class _ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: [],\n      loading: true\n    };\n\n    this.onRemove = id => {\n      this.setState(prevState => ({\n        todoList: prevState.todoList.filter(item => item.id !== id)\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    let _ref = await getData(),\n        data = _ref.data;\n\n    this.setState({\n      todoList: data.todoList,\n      loading: false\n    });\n  }\n\n  render() {\n    // console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: css.ldsFacebook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))) : React.createElement(TransitionGroup, {\n      className: css.todoList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.todoList.map(item => React.createElement(CSSTransition, {\n      key: item.id,\n      timeout: 3000,\n      classNames: {\n        enter: css.listItemEnter,\n        enterActive: css.listItemEnterActive,\n        exit: css.listItemExit,\n        exitActive: css.listItemExitActive\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TodoItem, {\n      text: item.text,\n      onRemove: () => {\n        this.onRemove(item.id);\n        this.props.removeTodoItem(item.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), React.createElement(TodoListAdder, {\n      onCreate: item => {\n        // this.setState(prevState => ({\n        //     todoList: [\n        //         ...prevState.todoList,\n        //         item\n        //     ]\n        // }));\n        this.props.addTodoItem2(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })));\n  }\n\n}\nexport const ToDoList = connect(store => ({\n  todo: store.todo\n}), dispatch => ({\n  addTodoItem2(item) {\n    dispatch(addTodoItem(item));\n  },\n\n  removeTodoItem(id) {\n    dispatch(removeTodoItem(id));\n  }\n\n}))(_ToDoList);","map":{"version":3,"sources":["/home/piscenco/fullStack/mipt-fs-2019/src/views/todo/index.jsx"],"names":["React","css","TodoItem","TodoListAdder","connect","addTodoItem","removeTodoItem","CSSTransition","TransitionGroup","sleep","ms","Promise","resolve","setTimeout","getData","data","todoList","id","text","_ToDoList","Component","state","loading","onRemove","setState","prevState","filter","item","componentDidMount","render","ldsFacebook","map","enter","listItemEnter","enterActive","listItemEnterActive","exit","listItemExit","exitActive","listItemExitActive","props","addTodoItem2","ToDoList","store","todo","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport css from './styles.module.scss';\nimport {TodoItem} from \"../../components/todoItem\";\nimport {TodoListAdder} from \"../../components/todoItemAdder\";\nimport {connect} from \"react-redux\";\nimport {addTodoItem, removeTodoItem} from \"../../actions\";\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n\nconst sleep = (ms) =>\n    new Promise(resolve => setTimeout(resolve, ms));\n\nconst getData = async () => {\n    await sleep(3000);\n    return {\n        data: {\n            todoList: [\n                {\n                    id: 'wfoiwjefoiwejfoiej',\n                    text: 'First item',\n                }\n            ]\n        }\n    }\n};\n\nexport class _ToDoList extends React.Component {\n    state = {\n        todoList: [],\n        loading: true,\n    };\n\n    async componentDidMount() {\n        let { data } = await getData();\n        this.setState({\n            todoList: data.todoList,\n            loading: false\n        })\n    }\n\n    onRemove = (id) => {\n        this.setState(prevState => ({\n            todoList: prevState.todoList.filter(item => item.id !== id)\n        }))\n    };\n\n    render() {\n        // console.log(this.state);\n        return (\n            <div>\n                {this.state.loading ?\n                    <div>\n                        <div className={css.ldsFacebook}>\n                            <div/>\n                            <div/>\n                            <div/>\n                        </div>\n                    </div> :\n                    <TransitionGroup className={css.todoList}>\n                        {this.state.todoList.map(item =>\n                            <CSSTransition\n                                key={item.id}\n                                timeout={3000}\n                                classNames={{\n                                    enter: css.listItemEnter,\n                                    enterActive: css.listItemEnterActive,\n                                    exit: css.listItemExit,\n                                    exitActive: css.listItemExitActive,\n                                }}\n                            >\n                            <TodoItem\n                                text={item.text}\n                                onRemove={() => {\n                                    this.onRemove(item.id);\n                                    this.props.removeTodoItem(item.id);\n                                }}\n                            />\n                            </CSSTransition>\n                        )}\n                        <TodoListAdder\n                            onCreate={item => {\n                                // this.setState(prevState => ({\n                                //     todoList: [\n                                //         ...prevState.todoList,\n                                //         item\n                                //     ]\n                                // }));\n                                this.props.addTodoItem2(item);\n                            }}\n                        />\n                    </TransitionGroup>}\n            </div>\n        )\n    }\n}\n\nexport const ToDoList = connect(\n    store => ({\n        todo: store.todo,\n    }),\n    dispatch => ({\n        addTodoItem2(item) {\n            dispatch(addTodoItem(item));\n        },\n        removeTodoItem(id) {\n            dispatch(removeTodoItem(id));\n        }\n    })\n)(_ToDoList);"]},"metadata":{},"sourceType":"module"}