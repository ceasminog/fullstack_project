{"ast":null,"code":"var _jsxFileName = \"/home/piscenco/fullStack/mipt-fs-2019/front/src/views/todo/index.jsx\";\nimport React from 'react';\nimport css from './styles.module.scss';\nimport { LikeItem } from \"../../components/like_\";\nimport { LikeAdder } from \"../../components/likeAdder\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike } from \"../../actions\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst getData = async () => {\n  return {\n    data: {\n      todoList: [{\n        id: '0'\n      }]\n    }\n  };\n};\n\nexport class _ToDoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: [],\n      loading: true\n    };\n\n    this.onRemove = id => {\n      this.setState(prevState => ({\n        todoList: prevState.todoList.filter(item => item.id !== id)\n      }));\n    };\n  }\n\n  async componentDidMount() {\n    let _ref = await getData(),\n        data = _ref.data;\n  }\n\n  render() {\n    // console.log(this.state);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"sdfgthyju\");\n  }\n\n}\nexport const LikeList = connect(store => ({\n  like: store.like\n}), dispatch => ({\n  addLike(item) {\n    dispatch(addLike(item));\n  },\n\n  removeLike(id) {\n    dispatch(removeLike(id));\n  }\n\n}))(LikeList);","map":{"version":3,"sources":["/home/piscenco/fullStack/mipt-fs-2019/front/src/views/todo/index.jsx"],"names":["React","css","LikeItem","LikeAdder","connect","addLike","removeLike","CSSTransition","TransitionGroup","getData","data","todoList","id","_ToDoList","Component","state","loading","onRemove","setState","prevState","filter","item","componentDidMount","render","LikeList","store","like","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,SAAR,QAAwB,4BAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,eAAlC;AACA,SACIC,aADJ,EAEIC,eAFJ,QAGO,wBAHP;;AAMA,MAAMC,OAAO,GAAG,YAAY;AACxB,SAAO;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE,CACN;AACIC,QAAAA,EAAE,EAAE;AADR,OADM;AADR;AADH,GAAP;AASH,CAVD;;AAYA,OAAO,MAAMC,SAAN,SAAwBb,KAAK,CAACc,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJJ,MAAAA,QAAQ,EAAE,EADN;AAEJK,MAAAA,OAAO,EAAE;AAFL,KADmC;;AAAA,SAU3CC,QAV2C,GAU/BL,EAAD,IAAQ;AACf,WAAKM,QAAL,CAAcC,SAAS,KAAK;AACxBR,QAAAA,QAAQ,EAAEQ,SAAS,CAACR,QAAV,CAAmBS,MAAnB,CAA0BC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAA9C;AADc,OAAL,CAAvB;AAGH,KAd0C;AAAA;;AAM3C,QAAMU,iBAAN,GAA0B;AAAA,eACR,MAAMb,OAAO,EADL;AAAA,QACjBC,IADiB,QACjBA,IADiB;AAEzB;;AAQDa,EAAAA,MAAM,GAAG;AACL;AACA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR;AAGH;;AArB0C;AAwB/C,OAAO,MAAMC,QAAQ,GAAGpB,OAAO,CAC3BqB,KAAK,KAAK;AACNC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADN,CAAL,CADsB,EAI3BC,QAAQ,KAAK;AACTtB,EAAAA,OAAO,CAACgB,IAAD,EAAO;AACVM,IAAAA,QAAQ,CAACtB,OAAO,CAACgB,IAAD,CAAR,CAAR;AACH,GAHQ;;AAITf,EAAAA,UAAU,CAACM,EAAD,EAAK;AACXe,IAAAA,QAAQ,CAACrB,UAAU,CAACM,EAAD,CAAX,CAAR;AACH;;AANQ,CAAL,CAJmB,CAAP,CAYtBY,QAZsB,CAAjB","sourcesContent":["import React from 'react';\nimport css from './styles.module.scss';\nimport {LikeItem} from \"../../components/like_\";\nimport {LikeAdder} from \"../../components/likeAdder\";\nimport {connect} from \"react-redux\";\nimport {addLike, removeLike} from \"../../actions\";\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n\n\nconst getData = async () => {\n    return {\n        data: {\n            todoList: [\n                {\n                    id: '0',\n                }\n            ]\n        }\n    }\n};\n\nexport class _ToDoList extends React.Component {\n    state = {\n        todoList: [],\n        loading: true,\n    };\n\n    async componentDidMount() {\n       let { data } = await getData();\n    }\n\n    onRemove = (id) => {\n        this.setState(prevState => ({\n            todoList: prevState.todoList.filter(item => item.id !== id)\n        }))\n    };\n\n    render() {\n        // console.log(this.state);\n        return (<p>sdfgthyju</p>\n\n        )\n    }\n}\n\nexport const LikeList = connect(\n    store => ({\n        like: store.like,\n    }),\n    dispatch => ({\n        addLike(item) {\n            dispatch(addLike(item));\n        },\n        removeLike(id) {\n            dispatch(removeLike(id));\n        }\n    })\n)(LikeList);\n"]},"metadata":{},"sourceType":"module"}