{"ast":null,"code":"var _jsxFileName = \"/home/piscenco/fullStack/mipt-fs-2019/src/components/YourCat/index.jsx\";\nimport React from 'react';\nimport cat from \"../../citty1.jpg\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'; //import css from './styles.module.scss';\n\n/*\nexport class _YourCat extends React.Component{\n    render(){\n        return(\n            <div className=\"wrap\">\n                <div className=\"loading\">\n                    <div className=\"bounceball\"></div>\n                    <div className=\"text\">NOW LOADING</div>\n                </div>\n            </div>\n        );\n    }\n}\n*/\n\nimport { frontloadConnect } from 'react-frontload'; // async data loading inside frontload function\n\nconst frontload = async props => {\n  const data = await yourAPI.loadData(); // takes 2 seconds\n\n  yourStateManager.updateState(data); // e.g. redux dispatch\n}; // the raw component, which renders a data prop containing the async loaded data\n\n\nconst Presentation = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, props.data ? \"Loaded: \".concat(props.data) : 'Loading...');\n\nconst YourComponent = yourStateManager.connectDataPropFromState( // e.g. redux connect\nfrontloadConnect(frontload)( // frontload function bound to component here\nPresentation));\n/*\nexport class _YourCat extends React.Component{\n//export class _ToDoList extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    async componentDidMount() {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n        // console.log(this.state);\n        return (\n            <div>\n                {this.state.loading ?\n                    <div>\n                        <div>\n\n                            <div/>\n                            <div/>\n                            <div/>\n                        </div>\n                    </div> :\n                    <p>sdfrgthyu</p>}\n            </div>\n        )\n    }\n}\n\n/*\nexport const CatNames = props => {\n    return (\n        <div\n            className={css.NamesOfCats}\n        >\n         <p><Good names/p>\n        </div>\n    )\n};\n*/","map":{"version":3,"sources":["/home/piscenco/fullStack/mipt-fs-2019/src/components/YourCat/index.jsx"],"names":["React","cat","CSSTransition","TransitionGroup","frontloadConnect","frontload","props","data","yourAPI","loadData","yourStateManager","updateState","Presentation","YourComponent","connectDataPropFromState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQC,GAAR,MAAiB,kBAAjB;AACA,SACIC,aADJ,EAEIC,eAFJ,QAGO,wBAHP,C,CAIA;;AACA;;;;;;;;;;;;;;;AAcA,SAASC,gBAAT,QAAiC,iBAAjC,C,CAEA;;AACA,MAAMC,SAAS,GAAG,MAAOC,KAAP,IAAiB;AAC/B,QAAMC,IAAI,GAAG,MAAMC,OAAO,CAACC,QAAR,EAAnB,CAD+B,CACO;;AACtCC,EAAAA,gBAAgB,CAACC,WAAjB,CAA6BJ,IAA7B,EAF+B,CAEI;AACtC,CAHD,C,CAKA;;;AACA,MAAMK,YAAY,GAAIN,KAAD,IACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAMA,KAAK,CAACC,IAAN,qBAAwBD,KAAK,CAACC,IAA9B,IAAuC,YAA7C,CADJ;;AAIA,MAAMM,aAAa,GACfH,gBAAgB,CAACI,wBAAjB,EAA2C;AACvCV,gBAAgB,CAACC,SAAD,CAAhB,EAA6B;AACzBO,YADJ,CADJ,CADJ;AAKA","sourcesContent":["import React from 'react';\nimport  cat from \"../../citty1.jpg\"\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n//import css from './styles.module.scss';\n/*\nexport class _YourCat extends React.Component{\n    render(){\n        return(\n            <div className=\"wrap\">\n                <div className=\"loading\">\n                    <div className=\"bounceball\"></div>\n                    <div className=\"text\">NOW LOADING</div>\n                </div>\n            </div>\n        );\n    }\n}\n*/\nimport { frontloadConnect } from 'react-frontload'\n\n// async data loading inside frontload function\nconst frontload = async (props) => {\n    const data = await yourAPI.loadData() // takes 2 seconds\n    yourStateManager.updateState(data) // e.g. redux dispatch\n}\n\n// the raw component, which renders a data prop containing the async loaded data\nconst Presentation = (props) => (\n    <div>{props.data ? `Loaded: ${props.data}` : 'Loading...'}</div>\n)\n\nconst YourComponent =\n    yourStateManager.connectDataPropFromState( // e.g. redux connect\n        frontloadConnect(frontload)( // frontload function bound to component here\n            Presentation\n        ))\n/*\nexport class _YourCat extends React.Component{\n//export class _ToDoList extends React.Component {\n    state = {\n        loading: false,\n    };\n\n    async componentDidMount() {\n        this.setState({\n            loading: false\n        })\n    }\n\n\n    render() {\n        // console.log(this.state);\n        return (\n            <div>\n                {this.state.loading ?\n                    <div>\n                        <div>\n\n                            <div/>\n                            <div/>\n                            <div/>\n                        </div>\n                    </div> :\n                    <p>sdfrgthyu</p>}\n            </div>\n        )\n    }\n}\n\n/*\nexport const CatNames = props => {\n    return (\n        <div\n            className={css.NamesOfCats}\n        >\n         <p><Good names/p>\n        </div>\n    )\n};\n*/\n"]},"metadata":{},"sourceType":"module"}